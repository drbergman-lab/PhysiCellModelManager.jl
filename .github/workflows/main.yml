name: CI_test
on:
  push:
    branches:
      - main
      - development
      - feature-tests

# needed for julia-actions/cache to delete old caches
permissions:
  actions: write
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - '1.10.4' # the one I have been developing with
          - '1' # to check the latest v1 version
          - 'pre' # check upcoming releases
        os: ["ubuntu-latest"]
        shell: ["bash"]
        compiler: ["g++"]
        include:
          - os: "macOS-latest"
            julia-version: '1'
            shell: "bash"
            compiler: "g++-13"

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: ${{ matrix.shell }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true
        token: ${{ secrets.GH_PCVCT }}
    - name: Set up test project
      run: |
        mkdir -p ./test/test-project/data/inputs/configs/default
        cp ./test/PhysiCell/sample_projects/template/config/PhysiCell_settings.xml ./test/test-project/data/inputs/configs/default/PhysiCell_settings.xml
        mkdir -p ./test/test-project/data/inputs/custom_codes/default
        cp ./test/PhysiCell/sample_projects/template/main.cpp ./test/test-project/data/inputs/custom_codes/default/main.cpp
        cp ./test/PhysiCell/sample_projects/template/Makefile ./test/test-project/data/inputs/custom_codes/default/Makefile
        cp -r ./test/PhysiCell/sample_projects/template/custom_modules ./test/test-project/data/inputs/custom_codes/default/custom_modules
        mkdir -p ./test/test-project/data/inputs/rulesets_collections/default
        touch ./test/test-project/data/inputs/rulesets_collections/default/base_rulesets.csv
        echo "default,pressure,decreases,cycle entry,0,0.5,4,0" >> ./test/test-project/data/inputs/rulesets_collections/default/base_rulesets.csv
        echo "Template project files are in place within ./test/test-project/data/inputs"
    - uses: julia-actions/setup-julia@v2
      with:
        version: ${{ matrix.julia-version }}
    - uses: julia-actions/cache@v2
    - uses: julia-actions/julia-buildpkg@v1
    - uses: julia-actions/julia-runtest@v1 # not sure what this does yet...runs files marked as tests?
    - name: Install julia dependencies
      run: |
        julia -e 'using Pkg; \
                  Pkg.add(["DataFrames", "CSV", "SQLite", "Random", "LightXML", "LazyGrids", "Dates", "Tables", "Distributions", "Statistics", "QuasiMonteCarlo", "Sobol", "MAT", "FFTW", "GlobalSensitivity"]); \
                  Pkg.update()'
        echo "Julia packages added and updated"
    - name: Set environment variable PHYSICELL_CPP
      run: echo "PHYSICELL_CPP=${{ matrix.compiler }}" >> $GITHUB_ENV
    - name: Run sampling
      run: |
        cd ./tests
        julia -t 8 ./test-project/VCT/RunSampling.jl
        echo "RunSampling.jl complete"