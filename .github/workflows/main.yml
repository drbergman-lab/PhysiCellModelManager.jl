name: CI_test
on:
  push:
    branches:
      - main
      - development
      - feature-tests

# needed for julia-actions/cache to delete old caches
permissions:
  actions: write
  contents: read

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - '1.10.4' # the one I have been developing with
          - '1' # to check the latest v1 version
          - 'pre' # check upcoming releases
        os:
          - ubuntu-latest
        include:
          - os: macOS-latest
            julia-version: '1'
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true
        token: ${{ secrets.GH_PCVCT }}
    - name: Download PhysiCell
      run: |
        python ./tests/get_my_physicell.py
        unzip -q PhysiCell-my-physicell.zip -d ./tests
        echo "PhysiCell downloaded, unzipped, and moved to ./tests/PhysiCell"
    - name: Set up test project
      run: |
        mv ./tests/PhysiCell-my-physicell ./tests/PhysiCell
        mkdir -p ./tests/test-project/data/inputs/configs/default
        cp ./tests/PhysiCell/sample_projects/template/config/PhysiCell_settings.xml ./tests/test-project/data/inputs/configs/default/PhysiCell_settings.xml
        mkdir -p ./tests/test-project/data/inputs/custom_codes/default
        cp ./tests/PhysiCell/sample_projects/template/main.cpp ./tests/test-project/data/inputs/custom_codes/default/main.cpp
        cp -r ./tests/PhysiCell/sample_projects/template/custom_modules ./tests/test-project/data/inputs/custom_codes/default/custom_modules
        mkdir -p ./tests/test-project/data/inputs/rulesets_collections/default
        touch ./tests/test-project/data/inputs/rulesets_collections/default/base_rulesets.csv
        echo "default,pressure,decreases,cycle entry,0,0.5,4,0" >> ./tests/test-project/data/inputs/rulesets_collections/default/base_rulesets.csv
        echo "Template project files are in place within ./tests/test-project/data/inputs"
    - uses: julia-actions/setup-julia@v2
      with:
        version: ${{ matrix.julia-version }}
    - uses: julia-actions/cache@v2
    - uses: julia-actions/julia-buildpkg@v1
    - name: Install julia dependencies
      run: |
        julia -e 'using Pkg; \
                  Pkg.add(["DataFrames", "CSV", "SQLite", "Random", "LightXML", "LazyGrids", "Dates", "Tables", "Distributions", "Statistics", "QuasiMonteCarlo", "Sobol", "MAT", "FFTW", "GlobalSensitivity"]); \
                  Pkg.update()'
        echo "Julia packages added and updated"
    # - uses: julia-actions/julia-runtest@v1 # not sure what this does yet...runs files marked as tests?
    - name: Initialize database
      run: |
        cd ./tests
        julia ./test-project/VCT/InitializeDatabase.jl
        echo "Database initialized"
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       # - name: Checkout repository
#       #   uses: actions/checkout@v2
#       #   with:
#       #     submodules: true
#       #     token: ${{ secrets.GH_PCVCT }}
#       # - name: Set up Julia
#       #   uses: julia-actions/setup-julia@v2
#       #   with:
#       #     version: '1' # lts was producing inconsistent versions. sometimes 1.6.7, sometimes 1.10.5. so I'm going with the version I have been most recently developing with.
#       - name: Install julia dependencies
#         run: |
#           julia -e 'using Pkg; \
#                     Pkg.add(["DataFrames", "CSV", "SQLite", "Random", "LightXML", "LazyGrids", "Dates", "Tables", "Distributions", "Statistics", "QuasiMonteCarlo", "Sobol", "MAT", "FFTW", "GlobalSensitivity"]); \
#                     Pkg.update()'
#           echo "Julia packages added and updated"
#       - name: Initialize database
#         run: |
#           cd ./tests
#           julia ./test-project/VCT/InitializeDatabase.jl
#           echo "Database initialized"